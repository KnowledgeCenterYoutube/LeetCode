Leetcode 253 : Meeting Rooms II

--------------------------------------

Description
Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.)

(0,8),(8,10) is not conflict at 8

Example
Example1

Input: intervals = [(0,30),(5,10),(15,20)]
Output: 2
Explanation:
We need two meeting rooms
room1: (0,30)
room2: (5,10),(15,20)
Example2

Input: intervals = [(2,7)]
Output: 1
Explanation: 
Only need one meeting room

-----------------

Solution:

C++:
----
/**
 * Definition of Interval:
 * class Interval {
 * public:
 *     int start, end;
 *     Interval(int start, int end) {
 *         this->start = start;
 *         this->end = end;
 *     }
 * }
 */

class Solution {
public:
    /**
     * @param intervals: an array of meeting time intervals
     * @return: the minimum number of conference rooms required
     */
    int minMeetingRooms(vector<Interval> &intervals) {
        // Write your code here
            // your code will replace this placeholder return statement
        int n = intervals.size();
        vector<int> start, end;
        for(auto it: intervals){
            start.push_back(it.start);
            end.push_back(it.end);
        }
        sort(start.begin(), start.end());
        sort(end.begin(), end.end());
        int active_rooms = 0, max_rooms = 0;
        int i = 0, j = 0;
        while(i < n && j < n){
            if(start[i] < end[j]){
                active_rooms++;
                i++;
            } else{
                active_rooms--;
                j++;
            }
            max_rooms = max(max_rooms, active_rooms);
        }
    
        return max_rooms;
    }
};
